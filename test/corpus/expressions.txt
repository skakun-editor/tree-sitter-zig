===============================================================================
Assignment expressions
===============================================================================

test {
  defer foo += 123;
  switch(foo) {
    1...3 => main(),
    321 => foo -= 123,
    else => bar = foo == 0,
  }
  if(true) in, out = .{0, 0} else in >>= 8;
  while(i < 10) : (i += 2) i -= 1;
}

-------------------------------------------------------------------------------

(source_file
  (test_declaration
    (block
      (defer_statement
        (assignment_expression
          (identifier)
          (assignment_operator)
          (integer)))
      (switch_expression
        (identifier)
        (switch_case
          (integer)
          (integer)
          (call_expression
            (identifier)))
        (switch_case
          (integer)
          (assignment_expression
            (identifier)
            (assignment_operator)
            (integer)))
        (switch_case
          (assignment_expression
            (identifier)
            (assignment_operator)
            (binary_expression
              (identifier)
              (integer)))))
      (if_statement
        (boolean)
        (assignment_expression
          (identifier)
          (identifier)
          (anonymous_struct_initializer
            (initializer_list
              (integer)
              (integer))))
        (else_clause
          (variable_declaration
            (identifier)
            (assignment_operator)
            (integer))))
      (labeled_statement
        (while_statement
          (binary_expression
            (identifier)
            (integer))
          (assignment_expression
            (identifier)
            (assignment_operator)
            (integer))
          (assignment_expression
            (identifier)
            (assignment_operator)
            (integer)))))))
